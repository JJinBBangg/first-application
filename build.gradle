plugins {
	id 'java'
	id 'org.springframework.boot' version '3.0.5'
	id 'io.spring.dependency-management' version '1.1.0'
	id "com.github.node-gradle.node" version "3.5.1"
	id "org.asciidoctor.jvm.convert" version "3.3.2"
}
node{
	version = '18.16.0'
	npmVersion = '9.5.1'
	workDir = file('./src/front')
	npmWorkDir = file("./src/front")
	nodeModulesDir = file("./src/front")
}
group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	asciidoctorExt
}

repositories {
	mavenCentral()
}

ext {
	snippetsDir = file('build/generated-snippets')
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.projectlombok:lombok:1.18.26'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	implementation group: 'com.oracle.database.jdbc', name: 'ojdbc10', version: '19.18.0.0'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.1'
	asciidoctorExt 'org.springframework.restdocs:spring-restdocs-asciidoctor:3.0.0'
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc:3.0.0'
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'
	implementation 'software.amazon.awssdk:s3:2.20.57'
	implementation 'org.mariadb.jdbc:mariadb-java-client:3.1.4'
	implementation 'org.springframework.security:org.springframework.security'
	implementation 'org.springframework.boot:spring-boot-starter-security:3.0.5'



}
test {
	outputs.dir snippetsDir
}
asciidoctor {
	inputs.dir snippetsDir
	configurations 'asciidoctorExt'
	dependsOn test
}

tasks.named('test') {
	useJUnitPlatform()
}
task setUp(type: NpmTask) {
	description = 'Install Node.js Packages'
	args = ['install']
	inputs.files file('package.json')
	outputs.files file('nod_modules')
}
task buildFrontEnd(type: NpmTask, dependsOn: setUp){
	description = 'Build vue.js'
	args = ['run', 'build']
}
processResources.dependsOn 'buildFrontEnd'

bootJar {
	dependsOn asciidoctor
	copy{
		from asciidoctor.outputDir
		into "src/main/resources/static/docs"
	}
//	from ("${asciidoctor.outputDir}/index") {
//		println ">>>" + asciidoctor.outputDir
//		into 'src/main/resources/static/docs'
//	}
}